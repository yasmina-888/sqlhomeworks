Find Employees with Minimum Salary

Retrieve employees who earn the minimum salary in the company.

SELECT * 
FROM employees 
WHERE salary = (SELECT MIN(salary) FROM employees);


This query retrieves all employees whose salary is equal to the minimum salary in the employees table.

Find Products Above Average Price

Retrieve products priced above the average price.

SELECT * 
FROM products 
WHERE price > (SELECT AVG(price) FROM products);


This query returns products with prices greater than the average price of all products in the products table.

Level 2: Nested Subqueries with Conditions

Find Employees in Sales Department

Retrieve employees who work in the "Sales" department.

SELECT * 
FROM employees 
WHERE department_id = (SELECT id FROM departments WHERE department_name = 'Sales');


This query finds employees working in the Sales department by first finding the id of the "Sales" department and then using it in the main query.

Find Customers with No Orders

Retrieve customers who have not placed any orders.

SELECT * 
FROM customers 
WHERE customer_id NOT IN (SELECT customer_id FROM orders);


This query retrieves customers whose customer_id does not appear in the orders table, indicating they havent placed any orders.

Level 3: Aggregation and Grouping in Subqueries

Find Products with Max Price in Each Category

Retrieve products with the highest price in each category.

SELECT * 
FROM products p
WHERE price = (SELECT MAX(price) 
               FROM products 
               WHERE category_id = p.category_id);


This query returns the products that have the maximum price within their respective categories. It uses a correlated subquery to compare each products price against the maximum price for its category.

Find Employees in Department with Highest Average Salary

Retrieve employees working in the department with the highest average salary.

SELECT * 
FROM employees 
WHERE department_id = (SELECT department_id 
                        FROM employees 
                        GROUP BY department_id 
                        ORDER BY AVG(salary) DESC 
                        LIMIT 1);


This query identifies the department with the highest average salary and retrieves all employees from that department.

Level 4: Correlated Subqueries

Find Employees Earning Above Department Average

Retrieve employees earning more than the average salary in their department.

SELECT * 
FROM employees e
WHERE salary > (SELECT AVG(salary) 
                FROM employees 
                WHERE department_id = e.department_id);


This query retrieves employees whose salary is higher than the average salary in their department. The subquery is correlated, as it refers to the outer querys department_id.

Find Students with Highest Grade per Course

Retrieve students who received the highest grade in each course.

SELECT s.name, g.course_id, g.grade
FROM students s
JOIN grades g ON s.student_id = g.student_id
WHERE g.grade = (SELECT MAX(grade) 
                 FROM grades 
                 WHERE course_id = g.course_id);


This query finds the students with the highest grade in each course by using a correlated subquery.

Level 5: Subqueries with Ranking and Complex Conditions

Find Third-Highest Price per Category

Retrieve products with the third-highest price in each category.

SELECT * 
FROM products p1
WHERE price = (
    SELECT DISTINCT price 
    FROM products p2
    WHERE p2.category_id = p1.category_id
    ORDER BY price DESC
    LIMIT 2, 1)
