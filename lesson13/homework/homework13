1. Combine Two Tables (Person and Address)

To combine the Person and Address tables and get the first name, last name, city, and state for each person:

SELECT p.firstName, p.lastName, a.city, a.state
FROM Person p
LEFT JOIN Address a ON p.personId = a.personId;


This uses a LEFT JOIN to ensure all persons are included, even if there is no matching address.

2. Employees Earning More Than Their Managers

To find employees earning more than their managers:

SELECT e.name AS Employee
FROM Employee e
JOIN Employee m ON e.managerId = m.id
WHERE e.salary > m.salary;


This query performs a self-join of the Employee table, comparing employee salaries to their managers.

3. Duplicate Emails

To find emails that are duplicated in the Person table:

SELECT email
FROM Person
GROUP BY email
HAVING COUNT(email) > 1;


This groups by email and uses HAVING COUNT(email) > 1 to filter out duplicates.

4. Delete Duplicate Emails

To delete duplicate emails, keeping only the one with the smallest id:

DELETE FROM Person
WHERE id NOT IN (
    SELECT MIN(id)
    FROM Person
    GROUP BY email
);


This deletes rows where the id is not the smallest for each email.

5. Find Parents Who Have Only Girls

To find parents who only have girls (i.e., no boys):

SELECT DISTINCT g.ParentName
FROM girls g
LEFT JOIN boys b ON g.ParentName = b.ParentName
WHERE b.Id IS NULL;


This LEFT JOIN ensures only parents who appear in the girls table and not in the boys table are selected.

6. Total over 50 and Least Weight

To calculate the total sales amount for orders with a weight greater than 50, along with the least weight per customer:

SELECT customerId, 
       SUM(totalAmount) AS totalSalesAmount, 
       MIN(weight) AS leastWeight
FROM Orders
WHERE weight > 50
GROUP BY customerId;


This sums the totalAmount and finds the minimum weight for each customerId.

7. Carts

To show the items in both carts, along with exclusive items from each cart:

SELECT c1.Item AS "Item Cart 1", c2.Item AS "Item Cart 2"
FROM Cart1 c1
FULL OUTER JOIN Cart2 c2 ON c1.Item = c2.Item;


This uses a FULL OUTER JOIN to capture items from both carts, including those that are only in one cart.

8. Customers Who Never Order

To find customers who have never placed an order:

SELECT c.name AS Customers
FROM Customers c
LEFT JOIN Orders o ON c.id = o.customerId
WHERE o.id IS NULL;


This LEFT JOIN checks for customers without matching orders (o.id IS NULL).

9. Students and Examinations

To count how many times each student attended each exam:

SELECT s.student_id, 
       s.student_name, 
       sub.subject_name, 
       COUNT(e.subject_name) AS attended_exams
FROM Students s
CROSS JOIN Subjects sub
LEFT JOIN Examinations e ON s.student_id = e.student_id AND sub.subject_name = e.subject_name
GROUP BY s.student_id, s.student_name, sub.subject_name
ORDER BY s.student_id, sub.subject_name
