Easy-Level Tasks
1. List all combinations of product names and supplier names (Products, Suppliers)
SELECT p.ProductName, s.SupplierName
FROM Products p
JOIN Suppliers s ON p.SupplierID = s.SupplierID;

2. Get all combinations of departments and employees (Departments, Employees)
SELECT d.DepartmentName, e.Name AS EmployeeName
FROM Departments d
JOIN Employees e ON d.DepartmentID = e.DepartmentID;

3. List only combinations where the supplier actually supplies the product. Return supplier name and product name (Products, Suppliers)
SELECT s.SupplierName, p.ProductName
FROM Products p
JOIN Suppliers s ON p.SupplierID = s.SupplierID;

4. List customer names and their order IDs (Orders, Customers)
SELECT c.FirstName || ' ' || c.LastName AS CustomerName, o.OrderID
FROM Orders o
JOIN Customers c ON o.CustomerID = c.CustomerID;

5. Get all combinations of students and courses (Courses, Students)
SELECT s.Name AS StudentName, c.CourseName
FROM Students s
JOIN Enrollments e ON s.StudentID = e.StudentID
JOIN Courses c ON e.CourseID = c.CourseID;

6. Get product names and orders where product IDs match (Products, Orders)
SELECT p.ProductName, o.OrderID
FROM Orders o
JOIN Products p ON o.ProductID = p.ProductID;

7. List employees whose DepartmentID matches the department (Departments, Employees)
SELECT e.Name AS EmployeeName, d.DepartmentName
FROM Employees e
JOIN Departments d ON e.DepartmentID = d.DepartmentID;

8. List student names and their enrolled course IDs (Students, Enrollments)
SELECT s.Name AS StudentName, e.CourseID
FROM Students s
JOIN Enrollments e ON s.StudentID = e.StudentID;

9. List all orders that have matching payments (Payments, Orders)
SELECT o.OrderID, p.PaymentID
FROM Payments p
JOIN Orders o ON p.OrderID = o.OrderID;

10. Show orders where product price is more than 100 (Orders, Products)
SELECT o.OrderID, p.ProductName, p.Price
FROM Orders o
JOIN Products p ON o.ProductID = p.ProductID
WHERE p.Price > 100;

üü° Medium-Level Tasks
1. List employee names and department names where department IDs are not equal (Employees, Departments)
SELECT e.Name AS EmployeeName, d.DepartmentName
FROM Employees e
JOIN Departments d ON e.DepartmentID != d.DepartmentID;

2. Show orders where ordered quantity is greater than stock quantity (Orders, Products)
SELECT o.OrderID, p.ProductName, o.Quantity, p.StockQuantity
FROM Orders o
JOIN Products p ON o.ProductID = p.ProductID
WHERE o.Quantity > p.StockQuantity;

3. List customer names and product IDs where sale amount is 500 or more (Customers, Sales)
SELECT c.FirstName || ' ' || c.LastName AS CustomerName, s.ProductID
FROM Sales s
JOIN Customers c ON s.CustomerID = c.CustomerID
WHERE s.Amount >= 500;

4. List student names and course names they‚Äôre enrolled in (Courses, Enrollments, Students)
SELECT s.Name AS StudentName, c.CourseName
FROM Students s
JOIN Enrollments e ON s.StudentID = e.StudentID
JOIN Courses c ON e.CourseID = c.CourseID;

5. List product and supplier names where supplier name contains ‚ÄúTech‚Äù (Products, Suppliers)
SELECT p.ProductName, s.SupplierName
FROM Products p
JOIN Suppliers s ON p.SupplierID = s.SupplierID
WHERE s.SupplierName LIKE '%Tech%';

6. Show orders where payment amount is less than total amount (Orders, Payments)
SELECT o.OrderID, o.TotalAmount, p.Amount
FROM Orders o
JOIN Payments p ON o.OrderID = p.OrderID
WHERE p.Amount < o.TotalAmount;

7. Get the Department Name for each employee (Employees, Departments)
SELECT e.Name AS EmployeeName, d.DepartmentName
FROM Employees e
JOIN Departments d ON e.DepartmentID = d.DepartmentID;

8. Show products where category is either 'Electronics' or 'Furniture' (Products, Categories)
SELECT ProductName, Category
FROM Products
WHERE Category IN ('Electronics', 'Furniture');

9. Show all sales from customers who are from 'USA' (Sales, Customers)
SELECT s.ProductID, c.FirstName || ' ' || c.LastName AS CustomerName
FROM Sales s
JOIN Customers c ON s.CustomerID = c.CustomerID
WHERE c.Country = 'USA';

10. List orders made by customers from 'Germany' and order total > 100 (Orders, Customers)
SELECT o.OrderID, c.FirstName || ' ' || c.LastName AS CustomerName, o.TotalAmount
FROM Orders o
JOIN Customers c ON o.CustomerID = c.CustomerID
WHERE c.Country = 'Germany' AND o.TotalAmount > 100;

üî¥ Hard-Level Tasks
1. List all pairs of employees from different departments (Employees)
SELECT e1.Name AS Employee1, e2.Name AS Employee2
FROM Employees e1, Employees e2
WHERE e1.DepartmentID != e2.DepartmentID;

2. List payment details where the paid amount is not equal to (Quantity √ó Product Price) (Payments, Orders, Products)
SELECT p.PaymentID, o.OrderID, o.Quantity, pr.Price, (o.Quantity * pr.Price) AS ExpectedAmount, p.Amount
FROM Payments p
JOIN Orders o ON p.OrderID = o.OrderID
JOIN Products pr ON o.ProductID = pr.ProductID
WHERE p.Amount != (o.Quantity * pr.Price);

3. Find students who are not enrolled in any course (Students, Enrollments)
SELECT s.Name AS StudentName
FROM Students s
LEFT JOIN Enrollments e ON s.StudentID = e.StudentID
WHERE e.StudentID IS NULL;

4. List employees who are managers of someone, but their salary is less than or equal to the person they manage (Employees)
SELECT e1.Name AS ManagerName, e2.Name AS EmployeeName, e1.Salary AS ManagerSalary, e2.Salary AS EmployeeSalary
FROM Employees e1
JOIN Employees e2 ON e1.EmployeeID = e2.ManagerID
WHERE e1.Salary <= e2.Salary;

5. List customers who have made an order, but no payment has been recorded for it (Orders, Payments, Customers)
SELECT c.FirstName || ' ' || c.LastName AS CustomerName, o.OrderID
FROM Orders o
JOIN Customers c ON o.CustomerID = c.CustomerID
LEFT JOIN Payments p ON o.OrderID = p.OrderID
WHERE p.PaymentID IS NULL
